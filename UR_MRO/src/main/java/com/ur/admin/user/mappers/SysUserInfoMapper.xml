<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ur.admin.user.mappers.SysUserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ur.admin.user.model.SysUserInfo" >
    <id column="ID" property="id" jdbcType="INTEGER" javaType="Integer" />
    <result column="LOGIN_NAME" property="loginName" jdbcType="VARCHAR" javaType="String" />
    <result column="NAME" property="name" jdbcType="VARCHAR" javaType="String" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" javaType="String" />
    <result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" javaType="String" />
    <result column="CREATED_TIME" property="createdTime" jdbcType="TIMESTAMP" javaType="Date" />
    <result column="LAST_UPDATED_BY" property="lastUpdatedBy" jdbcType="VARCHAR" javaType="String" />
    <result column="LAST_UPDATED_TIME" property="lastUpdatedTime" jdbcType="TIMESTAMP" javaType="Date" />
    <result column="role" property="role" jdbcType="VARCHAR" javaType="String" />
    <result column="JOB_NUMBER" property="jobNumber" jdbcType="VARCHAR" javaType="String" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" javaType="String" />
    <result column="STATUS" property="status" jdbcType="INTEGER" javaType="Integer" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    ID,LOGIN_NAME,NAME,PASSWORD,CREATED_BY,CREATED_TIME,LAST_UPDATED_BY,LAST_UPDATED_TIME,role,JOB_NUMBER,EMAIL,STATUS
  </sql>

  <select id="getSysUserInfoByPK" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
     from SYS_USERS
    where ID = #{id,jdbcType=INTEGER}
  </select>



  <select id="getAllSysUserInfo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from SYS_USERS
  </select>
  
  <insert id="insertSysUserInfo" parameterType="com.ur.admin.user.model.SysUserInfo" useGeneratedKeys="true" keyProperty="id">
    insert into SYS_USERS (
        LOGIN_NAME,NAME,PASSWORD,CREATED_BY,CREATED_TIME,LAST_UPDATED_BY,LAST_UPDATED_TIME,role,JOB_NUMBER,EMAIL,STATUS
    )values(
        #{loginName,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{createdBy,jdbcType=VARCHAR},#{createdTime,jdbcType=TIMESTAMP},#{lastUpdatedBy,jdbcType=VARCHAR},#{lastUpdatedTime,jdbcType=TIMESTAMP},#{role,jdbcType=VARCHAR},#{jobNumber,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{status,jdbcType=INTEGER}
    )
  </insert>
  
  <update id="updateSysUserInfoByPKSelective" parameterType="com.ur.admin.user.model.SysUserInfo" >
    update SYS_USERS
    <set>
      <if test="loginName != null" >
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null" >
        LAST_UPDATED_BY = #{lastUpdatedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedTime != null" >
        LAST_UPDATED_TIME = #{lastUpdatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="jobNumber != null" >
        JOB_NUMBER = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
    
  <!-- List<CommonSearchCondition> condList -->
  <select id="searchSysUserInfoCount" resultType="int" >
    select count(*) from SYS_USERS
    <if test="condList != null" >
      <where>
        <foreach item="cond" index="index" collection="condList" separator="and">
          <if test="cond.operator=='like'">
            ${cond.columnName}
            like CONCAT(CONCAT('%',#{cond.value}),'%')
          </if>
          <if test="cond.operator =='in'">
            ${cond.columnName} in 
	        <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
	          #{item}
	      	</foreach> 
          </if>
          <if test="cond.operator =='notin'">
            ${cond.columnName} not in 
	        <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
	          #{item}
	      	</foreach> 
          </if>
          <if test="cond.operator!='like' and cond.operator!='in' and cond.operator!='notin'">
             ${cond.columnName}
            <if test="cond.operator=='eq'">
              =
            </if>
            <if test="cond.operator=='ne'">
              !=
            </if>
            <if test="cond.operator=='lt'">
              &lt;
            </if>
            <if test="cond.operator=='gt'">
              &gt;
            </if>
            <if test="cond.operator=='le'">
              &lt;=
            </if>
            <if test="cond.operator=='ge'">
              &gt;=
            </if>
            #{cond.value}
          </if>
        </foreach>
      </where>
    </if>
  </select>
  
  <!-- List<String> selectFields, List<CommonSearchCondition> condList, List<String> orderByList, PageBean pageBean -->
  <select id="searchSysUserInfo" resultMap="BaseResultMap" >
    select
      <choose>
        <when test="selectFields != null">
          <foreach item="field" index="index" collection="selectFields" separator=",">
            ${field}
          </foreach>
        </when>
        <otherwise>
          <include refid="Base_Column_List" />
        </otherwise>
      </choose>
    from SYS_USERS
    <if test="condList != null" >
      <where>
        <foreach item="cond" index="index" collection="condList" separator="and">
          <if test="cond.operator=='like'">
            ${cond.columnName}
            like CONCAT(CONCAT('%',#{cond.value}),'%')
          </if>
          <if test="cond.operator =='in'">
            ${cond.columnName} in 
            <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
          #{item}
      </foreach> 
          </if>
          <if test="cond.operator =='notin'">
            ${cond.columnName} not in 
	        <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
	          #{item}
	      	</foreach> 
          </if>
          <if test="cond.operator!='like' and cond.operator!='in' and cond.operator!='notin'">
             ${cond.columnName}
            <if test="cond.operator=='eq'">
              =
            </if>
            <if test="cond.operator=='ne'">
              !=
            </if>
            <if test="cond.operator=='lt'">
              &lt;
            </if>
            <if test="cond.operator=='gt'">
              &gt;
            </if>
            <if test="cond.operator=='le'">
              &lt;=
            </if>
            <if test="cond.operator=='ge'">
              &gt;=
            </if>
            #{cond.value}
          </if>
        </foreach>
      </where>
    </if>
    <if test='orderByList != null'>
      order by
      <foreach item="order" index="index" collection="orderByList" separator=",">
        ${order}
      </foreach>
    </if>
    	<if test='orderByList == null'>
    		order by ID
    	</if>
    <if test="pageBean != null" >
     	   Offset #{pageBean.startRecordNum} Row Fetch Next #{pageBean.perPageSize} Rows Only
    </if>
  </select>
  
  <!-- manual added -->

  <select id="findUsername"  resultType="int"  >
    select
      count(1)
    from SYS_USERS
       where  status=0 and  LOGIN_NAME = #{userName,jdbcType=VARCHAR}
  </select>

</mapper>