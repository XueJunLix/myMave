<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ur.mro.sup.mappers.SupBankInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ur.mro.sup.model.SupBankInfo" >
    <id column="ID" property="id" jdbcType="INTEGER" javaType="Integer" />
    <result column="BANKCODE" property="bankcode" jdbcType="NVARCHAR" javaType="String" />
    <result column="BANKNAME" property="bankname" jdbcType="NVARCHAR" javaType="String" />
    <result column="DEPOSITBANKNAME" property="depositbankname" jdbcType="NVARCHAR" javaType="String" />
    <result column="ACCOUNTNAME" property="accountname" jdbcType="NVARCHAR" javaType="String" />
    <result column="BANKACCOUNT" property="bankaccount" jdbcType="VARCHAR" javaType="String" />
    <result column="SUPPLIER_ID" property="supplierId" jdbcType="INTEGER" javaType="Integer" />
    <result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" javaType="String" />
    <result column="CREATED_TIME" property="createdTime" jdbcType="TIMESTAMP" javaType="Date" />
    <result column="LAST_UPDATED_BY" property="lastUpdatedBy" jdbcType="VARCHAR" javaType="String" />
    <result column="LAST_UPDATED_TIME" property="lastUpdatedTime" jdbcType="TIMESTAMP" javaType="Date" />
    <result column="DELETED" property="deleted" jdbcType="INTEGER" javaType="Integer" />
    <result column="NATION" property="nation" jdbcType="NVARCHAR" javaType="String" />
    <result column="PROVINCE" property="province" jdbcType="NVARCHAR" javaType="String" />
    <result column="CITY" property="city" jdbcType="NVARCHAR" javaType="String" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    ID,BANKCODE,BANKNAME,DEPOSITBANKNAME,ACCOUNTNAME,BANKACCOUNT,SUPPLIER_ID,CREATED_BY,CREATED_TIME,LAST_UPDATED_BY,LAST_UPDATED_TIME,DELETED,NATION,PROVINCE,CITY
  </sql>
  
  <select id="getSupBankInfoByPK" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
     from SRM_SUP_BANKINFO
    where DELETED ='0' ID = #{id,jdbcType=INTEGER}
  </select>

    <select id="getSupBankInfoListBySupplierId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from SRM_SUP_BANKINFO
        where DELETED ='0' AND  SUPPLIER_ID = #{supplierId,jdbcType=INTEGER}
    </select>
  
   <insert id="insertSupBankInfo" keyProperty="id" useGeneratedKeys="true" parameterType="com.ur.mro.sup.model.SupBankInfo" >
    insert into SRM_SUP_BANKINFO (
        BANKCODE,BANKNAME,DEPOSITBANKNAME,ACCOUNTNAME,BANKACCOUNT,SUPPLIER_ID,CREATED_BY,CREATED_TIME,LAST_UPDATED_BY,LAST_UPDATED_TIME,DELETED,NATION,PROVINCE,CITY
    )values(
        #{bankcode,jdbcType=NVARCHAR},#{bankname,jdbcType=NVARCHAR},#{depositbankname,jdbcType=NVARCHAR},#{accountname,jdbcType=NVARCHAR},#{bankaccount,jdbcType=VARCHAR},#{supplierId,jdbcType=INTEGER},#{createdBy,jdbcType=VARCHAR},#{createdTime,jdbcType=TIMESTAMP},#{lastUpdatedBy,jdbcType=VARCHAR},#{lastUpdatedTime,jdbcType=TIMESTAMP},#{deleted,jdbcType=INTEGER},#{nation,jdbcType=NVARCHAR},#{province,jdbcType=NVARCHAR},#{city,jdbcType=NVARCHAR}
    )
  </insert>

  <update id="deleteSupBankInfo" parameterType="java.lang.Integer" >
    UPDATE SRM_SUP_BANKINFO SET SRM_SUP_BANKINFO.DELETED = '1',LAST_UPDATED_TIME = CONVERT(varchar,GETDATE(),120)
    WHERE SRM_SUP_BANKINFO.SUPPLIER_ID = #{supplierId,jdbcType=INTEGER}
  </update>
  
  <update id="updateSupBankInfoByPKSelective" parameterType="com.ur.mro.sup.model.SupBankInfo" >
    update SRM_SUP_BANKINFO
    <set>
      <if test="bankcode != null" >
        BANKCODE = #{bankcode,jdbcType=NVARCHAR},
      </if>
      <if test="bankname != null" >
        BANKNAME = #{bankname,jdbcType=NVARCHAR},
      </if>
      <if test="depositbankname != null" >
        DEPOSITBANKNAME = #{depositbankname,jdbcType=NVARCHAR},
      </if>
      <if test="accountname != null" >
        ACCOUNTNAME = #{accountname,jdbcType=NVARCHAR},
      </if>
      <if test="bankaccount != null" >
        BANKACCOUNT = #{bankaccount,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        SUPPLIER_ID = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null" >
        LAST_UPDATED_BY = #{lastUpdatedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedTime != null" >
        LAST_UPDATED_TIME = #{lastUpdatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        DELETED = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="nation != null" >
        NATION = #{nation,jdbcType=NVARCHAR},
      </if>
      <if test="province != null" >
        PROVINCE = #{province,jdbcType=NVARCHAR},
      </if>
      <if test="city != null" >
        CITY = #{city,jdbcType=NVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- List<CommonSearchCondition> condList -->
  <select id="searchSupBankInfoCount" resultType="int" >
    select count(*) from SRM_SUP_BANKINFO
    <if test="condList != null" >
      <where>
        <foreach item="cond" index="index" collection="condList" separator="and">
          <if test="cond.operator=='like'">
            ${cond.columnName}
            like CONCAT(CONCAT("%",#{cond.value}),"%")
          </if>
          <if test="cond.operator =='in'">
            ${cond.columnName} in 
            <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
          #{item}
      </foreach> 
          </if>
          <if test="cond.operator!='like' and cond.operator!='in'">
             ${cond.columnName}
            <if test="cond.operator=='eq'">
              =
            </if>
            <if test="cond.operator=='ne'">
              !=
            </if>
            <if test="cond.operator=='lt'">
              &lt;
            </if>
            <if test="cond.operator=='gt'">
              &gt;
            </if>
            <if test="cond.operator=='le'">
              &lt;=
            </if>
            <if test="cond.operator=='ge'">
              &gt;=
            </if>
            #{cond.value}
          </if>
        </foreach>
      </where>
    </if>
  </select>
  
  <!-- List<String> selectFields, List<CommonSearchCondition> condList, List<String> orderByList, PageBean pageBean -->
  <select id="searchSupBankInfo" resultMap="BaseResultMap" >
    select
      <choose>
        <when test="selectFields != null">
          <foreach item="field" index="index" collection="selectFields" separator=",">
            ${field}
          </foreach>
        </when>
        <otherwise>
          <include refid="Base_Column_List" />
        </otherwise>
      </choose>
    from SRM_SUP_BANKINFO
    <if test="condList != null" >
      <where>
        <foreach item="cond" index="index" collection="condList" separator="and">
          <if test="cond.operator=='like'">
            ${cond.columnName}
            like CONCAT(CONCAT("%",#{cond.value}),"%")
          </if>
          <if test="cond.operator =='in'">
            ${cond.columnName} in 
            <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
          #{item}
      </foreach> 
          </if>
          <if test="cond.operator!='like' and cond.operator!='in'">
             ${cond.columnName}
            <if test="cond.operator=='eq'">
              =
            </if>
            <if test="cond.operator=='ne'">
              !=
            </if>
            <if test="cond.operator=='lt'">
              &lt;
            </if>
            <if test="cond.operator=='gt'">
              &gt;
            </if>
            <if test="cond.operator=='le'">
              &lt;=
            </if>
            <if test="cond.operator=='ge'">
              &gt;=
            </if>
            #{cond.value}
          </if>
        </foreach>
      </where>
    </if>
    <if test='orderByList != null'>
      order by
      <foreach item="order" index="index" collection="orderByList" separator=",">
        ${order}
      </foreach>
    </if>
    	<if test='orderByList == null'>
    		order by ID
    	</if>
    <if test="pageBean != null" >
     	   Offset #{pageBean.startRecordNum} Row Fetch Next #{pageBean.perPageSize} Rows Only
    </if>
  </select>
  
  <!-- manual added -->
  
</mapper>