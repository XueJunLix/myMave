<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ur.mro.dic.mappers.DictionaryMapper" >
  <resultMap id="BaseResultMap" type="com.ur.mro.dic.model.Dictionary" >
    <id column="ID" property="id" jdbcType="INTEGER" javaType="Integer" />
    <result column="GROUP_ID" property="groupId" jdbcType="VARCHAR" javaType="String" />
    <result column="SGROUP" property="sgroup" jdbcType="VARCHAR" javaType="String" />
    <result column="SKEY" property="skey" jdbcType="VARCHAR" javaType="String" />
    <result column="SVALUE" property="svalue" jdbcType="NVARCHAR" javaType="String" />
    <result column="ACTIVE" property="active" jdbcType="VARCHAR" javaType="String" />
    <result column="PARENT_ID" property="parentId" jdbcType="INTEGER" javaType="Integer" />
    <result column="DESCRIPTION" property="description" jdbcType="NVARCHAR" javaType="String" />
    <result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" javaType="String" />
    <result column="CREATED_TIME" property="createdTime" jdbcType="TIMESTAMP" javaType="Date" />
    <result column="LAST_UPDATED_BY" property="lastUpdatedBy" jdbcType="VARCHAR" javaType="String" />
    <result column="LAST_UPDATED_TIME" property="lastUpdatedTime" jdbcType="TIMESTAMP" javaType="Date" />
    <result column="SCOM1" property="scom1" jdbcType="NVARCHAR" javaType="String" />
    <result column="SCOM2" property="scom2" jdbcType="NVARCHAR" javaType="String" />
    <result column="DELETED" property="deleted" jdbcType="INTEGER" javaType="Integer" />
    <result column="SORT" property="sort" jdbcType="INTEGER" javaType="Integer" />
    <result column="SCOM3" property="scom3" jdbcType="NVARCHAR" javaType="String" />
    <result column="GROUP_DESCIPTION" property="groupDesciption" jdbcType="NVARCHAR" javaType="String" />
    <result column="SGROUP_NAME" property="sgroupName" jdbcType="NVARCHAR" javaType="String" />
    <result column="LEAF_NODE" property="leafNode" jdbcType="INTEGER" javaType="Integer" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    ID,GROUP_ID,SGROUP,SKEY,SVALUE,ACTIVE,PARENT_ID,DESCRIPTION,CREATED_BY,CREATED_TIME,LAST_UPDATED_BY,LAST_UPDATED_TIME,SCOM1,SCOM2,DELETED,SORT,SCOM3,GROUP_DESCIPTION,SGROUP_NAME,LEAF_NODE
  </sql>
  
  <select id="getDictionaryByPK" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
     from SRM_SYS_DICTIONARY
    where DELETED = 0 AND ID = #{id,jdbcType=INTEGER}
  </select>

  <select id="getListBySgroup" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from SRM_SYS_DICTIONARY
    where SGROUP = #{sgroup} AND ACTIVE='1' AND DELETED = 0
  </select>

  <select id="getListBySgroupandCa" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from SRM_SYS_DICTIONARY  ACTIVE
    WHERE  1=1 AND  ACTIVE = '1' AND  DELETED = 0
      <if test="sgroup != null" >
        AND  SGROUP = #{sgroup,jdbcType=VARCHAR}
      </if>
      <if test="skey != null" >
       AND  SKEY LIKE  CONCAT(CONCAT('%',#{skey}),'%')
      </if>

  </select>

  <select id="getListBySgroupandProvince" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from SRM_SYS_DICTIONARY t where t.sgroup ='area'   AND ACTIVE='1'
      and t.skey like '%00' and skey not like '%0000'
      and SUBSTRING(t.skey, 0, 3)+'0000' = #{skey}
  </select>

  <select id="getProvinceList" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from SRM_SYS_DICTIONARY t where t.sgroup ='area'   AND ACTIVE='1'
      and skey like '%0000'
  </select>

  <select id="getSvalueBySgoupandSkey"  resultType="java.lang.String" >
    select SVALUE
    from SRM_SYS_DICTIONARY
    WHERE  1=1 AND  ACTIVE = '1' AND  DELETED = 0
    AND SGROUP = #{sgroup}
    AND SKEY = #{skey}
  </select>

  
  <insert id="insertDictionary" parameterType="com.ur.mro.dic.model.Dictionary" >
    insert into SRM_SYS_DICTIONARY (
  GROUP_ID,SGROUP,SKEY,SVALUE,ACTIVE,PARENT_ID,DESCRIPTION,CREATED_BY,CREATED_TIME,LAST_UPDATED_BY,LAST_UPDATED_TIME,SCOM1,SCOM2,DELETED,SORT,SCOM3,GROUP_DESCIPTION,SGROUP_NAME,LEAF_NODE
  )values
  (
  #{groupId,jdbcType=VARCHAR},#{sgroup,jdbcType=VARCHAR},#{skey,jdbcType=VARCHAR},#{svalue,jdbcType=NVARCHAR},#{active,jdbcType=VARCHAR},#{parentId,jdbcType=INTEGER},#{description,jdbcType=NVARCHAR},#{createdBy,jdbcType=VARCHAR},#{createdTime,jdbcType=TIMESTAMP},#{lastUpdatedBy,jdbcType=VARCHAR},#{lastUpdatedTime,jdbcType=TIMESTAMP},#{scom1,jdbcType=NVARCHAR},#{scom2,jdbcType=NVARCHAR},#{deleted,jdbcType=INTEGER},#{sort,jdbcType=INTEGER},#{scom3,jdbcType=NVARCHAR},#{groupDesciption,jdbcType=NVARCHAR},#{sgroupName,jdbcType=NVARCHAR},#{leafNode,jdbcType=INTEGER}
  )

</insert>

  <insert id="insertBatchDictionaryList" parameterType="java.util.List">
    insert into SRM_SYS_DICTIONARY (
  GROUP_ID,SGROUP,SKEY,SVALUE,ACTIVE,PARENT_ID,DESCRIPTION,CREATED_BY,CREATED_TIME,LAST_UPDATED_BY,LAST_UPDATED_TIME,SCOM1,SCOM2,DELETED,SORT,SCOM3,GROUP_DESCIPTION,SGROUP_NAME,LEAF_NODE
  )values
    <foreach collection ="list" item="item" separator =",">
      (
      #{item.groupId,jdbcType=VARCHAR},#{item.sgroup,jdbcType=VARCHAR},#{item.skey,jdbcType=VARCHAR},#{item.svalue,jdbcType=NVARCHAR},#{item.active,jdbcType=VARCHAR},#{item.parentId,jdbcType=INTEGER},#{item.description,jdbcType=NVARCHAR},#{item.createdBy,jdbcType=VARCHAR},#{item.createdTime,jdbcType=TIMESTAMP},#{item.lastUpdatedBy,jdbcType=VARCHAR},#{item.lastUpdatedTime,jdbcType=TIMESTAMP},#{item.scom1,jdbcType=NVARCHAR},#{item.scom2,jdbcType=NVARCHAR},#{item.deleted,jdbcType=INTEGER},#{item.sort,jdbcType=INTEGER},#{item.scom3,jdbcType=NVARCHAR},#{item.groupDesciption,jdbcType=NVARCHAR},#{item.sgroupName,jdbcType=NVARCHAR},#{item.leafNode,jdbcType=INTEGER}
      )

    </foreach>
  </insert>

  <update id="updateBatchDictionaryList">
    update SRM_SYS_DICTIONARY
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="GROUP_ID =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.groupId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="SGROUP =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.sgroup,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="SKEY =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.skey,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="SVALUE =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.svalue,jdbcType=NVARCHAR}
        </foreach>
      </trim>
      <trim prefix="ACTIVE =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.active,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="DESCRIPTION =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.description,jdbcType=NVARCHAR}
        </foreach>
      </trim>
      <trim prefix="CREATED_BY =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.createdBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="CREATED_TIME =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.createdTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="LAST_UPDATED_BY =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.lastUpdatedBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="LAST_UPDATED_TIME =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.lastUpdatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="SCOM1 =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.scom1,jdbcType=NVARCHAR}
        </foreach>
      </trim>
      <trim prefix="SCOM2 =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.scom2,jdbcType=NVARCHAR}
        </foreach>
      </trim>
      <trim prefix="DELETED =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.deleted,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="SORT =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.sort,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="SCOM3 =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.scom3,jdbcType=NVARCHAR}
        </foreach>
      </trim>
      <trim prefix="GROUP_DESCIPTION =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.groupDesciption,jdbcType=NVARCHAR}
        </foreach>
      </trim>
      <trim prefix="SGROUP_NAME =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.sgroupName,jdbcType=NVARCHAR}
        </foreach>
      </trim>
      <trim prefix="LEAF_NODE =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          when id=#{i.id} then #{i.leafNode,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item.id}
    </foreach>
  </update>

  
  <update id="updateDictionaryByPKSelective" parameterType="com.ur.mro.dic.model.Dictionary" >
    update SRM_SYS_DICTIONARY
    <set>
      <if test="groupId != null" >
        GROUP_ID = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="sgroup != null" >
        SGROUP = #{sgroup,jdbcType=VARCHAR},
      </if>
      <if test="skey != null" >
        SKEY = #{skey,jdbcType=VARCHAR},
      </if>
      <if test="svalue != null" >
        SVALUE = #{svalue,jdbcType=NVARCHAR},
      </if>
      <if test="active != null" >
        ACTIVE = #{active,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=NVARCHAR},
      </if>
      <if test="createdBy != null" >
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null" >
        LAST_UPDATED_BY = #{lastUpdatedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedTime != null" >
        LAST_UPDATED_TIME = #{lastUpdatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scom1 != null" >
        SCOM1 = #{scom1,jdbcType=NVARCHAR},
      </if>
      <if test="scom2 != null" >
        SCOM2 = #{scom2,jdbcType=NVARCHAR},
      </if>
      <if test="deleted != null" >
        DELETED = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        SORT = #{sort,jdbcType=INTEGER},
      </if>
      <if test="scom3 != null" >
        SCOM3 = #{scom3,jdbcType=NVARCHAR},
      </if>
      <if test="groupDesciption != null" >
        GROUP_DESCIPTION = #{groupDesciption,jdbcType=NVARCHAR},
      </if>
      <if test="sgroupName != null" >
        SGROUP_NAME = #{sgroupName,jdbcType=NVARCHAR},
      </if>
      <if test="leafNode != null" >
        LEAF_NODE = #{leafNode,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- List<CommonSearchCondition> condList -->
  <select id="searchDictionaryCount" resultType="int" >
    SELECT COUNT (*) FROM
    (
    select max(id) as id, sgroup,SGROUP_name,GROUP_DESCIPTION from(
    select  id, sgroup,SGROUP_name,GROUP_DESCIPTION,DELETED from SRM_SYS_DICTIONARY
    <if test="condList != null" >
      <where>
        <foreach item="cond" index="index" collection="condList" separator="and">
          <if test="cond.operator=='like'">
            ${cond.columnName}
            like CONCAT(CONCAT('%',#{cond.value}),'%')
          </if>
          <if test="cond.operator =='in'">
            ${cond.columnName} in 
            <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
          #{item}
      </foreach> 
          </if>
          <if test="cond.operator!='like' and cond.operator!='in'">
             ${cond.columnName}
            <if test="cond.operator=='eq'">
              =
            </if>
            <if test="cond.operator=='ne'">
              !=
            </if>
            <if test="cond.operator=='lt'">
              &lt;
            </if>
            <if test="cond.operator=='gt'">
              &gt;
            </if>
            <if test="cond.operator=='le'">
              &lt;=
            </if>
            <if test="cond.operator=='ge'">
              &gt;=
            </if>
            #{cond.value}
          </if>
        </foreach>
      </where>
      ) t where DELETED = 0 GROUP BY SGROUP,SGROUP_name,GROUP_DESCIPTION
      ) t
    </if>
  </select>
  
  <!-- List<String> selectFields, List<CommonSearchCondition> condList, List<String> orderByList, PageBean pageBean -->
  <select id="searchDictionary" resultMap="BaseResultMap" >
    SELECT max(id) as id, sgroup,SGROUP_name,GROUP_DESCIPTION FROM
    (
    select
      <choose>
        <when test="selectFields != null">
          <foreach item="field" index="index" collection="selectFields" separator=",">
            ${field}
          </foreach>
        </when>
        <otherwise>
          <include refid="Base_Column_List" />
        </otherwise>
      </choose>
    from SRM_SYS_DICTIONARY
    <if test="condList != null" >
      <where>
        <foreach item="cond" index="index" collection="condList" separator="and">
          <if test="cond.operator=='like'">
            ${cond.columnName}
            like CONCAT(CONCAT('%',#{cond.value}),'%')
          </if>
          <if test="cond.operator =='in'">
            ${cond.columnName} in 
            <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
          #{item}
      </foreach> 
          </if>
          <if test="cond.operator!='like' and cond.operator!='in'">
             ${cond.columnName}
            <if test="cond.operator=='eq'">
              =
            </if>
            <if test="cond.operator=='ne'">
              !=
            </if>
            <if test="cond.operator=='lt'">
              &lt;
            </if>
            <if test="cond.operator=='gt'">
              &gt;
            </if>
            <if test="cond.operator=='le'">
              &lt;=
            </if>
            <if test="cond.operator=='ge'">
              &gt;=
            </if>
            #{cond.value}
          </if>
        </foreach>
      </where>
    </if>
    <if test='orderByList != null'>
      order by
      <foreach item="order" index="index" collection="orderByList" separator=",">
        ${order}
      </foreach>
    </if>

    ) t
    where DELETED = 0 GROUP BY SGROUP,SGROUP_name,GROUP_DESCIPTION
    <if test='orderByList == null'>
      order by ID
    </if>
    <if test="pageBean != null" >
      Offset #{pageBean.startRecordNum} Row Fetch Next #{pageBean.perPageSize} Rows Only
    </if>
  </select>
  
  <!-- manual added -->
  
</mapper>