<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ur.bi.mappers.DesignGroupingMapper" >
  <resultMap id="BaseResultMap" type="com.ur.bi.model.DesignGrouping" >
    <id column="id" property="id" jdbcType="INTEGER" javaType="Integer" />
    <result column="design_grouping" property="designGrouping" jdbcType="VARCHAR" javaType="String" />
    <result column="serial" property="serial" jdbcType="VARCHAR" javaType="String" />
    <result column="original_serial" property="originalSerial" jdbcType="VARCHAR" javaType="String" />
    <result column="style" property="style" jdbcType="VARCHAR" javaType="String" />
    <result column="goods_level" property="goodsLevel" jdbcType="VARCHAR" javaType="String" />
    <result column="category" property="category" jdbcType="VARCHAR" javaType="String" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" javaType="Date" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" javaType="String" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" javaType="Date" />
    <result column="modify_by" property="modifyBy" jdbcType="VARCHAR" javaType="String" />
    <!-- l -->
    <result column="deleted" property="deleted" jdbcType="INTEGER" javaType="Integer" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id,design_grouping,serial,original_serial,style,goods_level,category,create_time,create_by,modify_time,modify_by,deleted
  </sql>
  
  <select id="getDesignGroupingByPK" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
     from bi_design_grouping
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <insert id="insertDesignGrouping" parameterType="com.ur.bi.model.DesignGrouping" >
    <selectKey keyProperty="id" resultType="Integer" order="AFTER" >
      select LAST_INSERT_ID()
    </selectKey>
    insert into bi_design_grouping (
        id,design_grouping,serial,original_serial,style,goods_level,category,create_time,create_by,modify_time,modify_by,deleted
    )values(
        #{id,jdbcType=INTEGER},#{designGrouping,jdbcType=VARCHAR},#{serial,jdbcType=VARCHAR},#{originalSerial,jdbcType=VARCHAR},#{style,jdbcType=VARCHAR},#{goodsLevel,jdbcType=VARCHAR},#{category,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{createBy,jdbcType=VARCHAR},#{modifyTime,jdbcType=TIMESTAMP},#{modifyBy,jdbcType=VARCHAR},#{deleted,jdbcType=INTEGER}
    )
  </insert>
  
  <update id="updateDesignGroupingByPKSelective" parameterType="com.ur.bi.model.DesignGrouping" >
    update bi_design_grouping
    <set>
      <if test="designGrouping != null" >
        design_grouping = #{designGrouping,jdbcType=VARCHAR},
      </if>
      <if test="serial != null" >
        serial = #{serial,jdbcType=VARCHAR},
      </if>
      <if test="originalSerial != null" >
        original_serial = #{originalSerial,jdbcType=VARCHAR},
      </if>
      <if test="style != null" >
        style = #{style,jdbcType=VARCHAR},
      </if>
      <if test="goodsLevel != null" >
        goods_level = #{goodsLevel,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null" >
        modify_by = #{modifyBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- List<CommonSearchCondition> condList -->
  <select id="searchDesignGroupingCount" resultType="int" >
    select count(*) from bi_design_grouping
    <where>
      1=1 and  deleted = 0
      <if test="condList != null" >

        <foreach item="cond" index="index" collection="condList" >
          <if test="cond.operator=='like'">
           and  ${cond.columnName}
            like CONCAT(CONCAT("%",#{cond.value}),"%")
          </if>
          <if test="cond.operator =='in'">
           and  ${cond.columnName} in
            <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
          #{item}
      </foreach>
          </if>
          <if test="cond.operator!='like' and cond.operator!='in'">
             ${cond.columnName}
            <if test="cond.operator=='eq'">
              =
            </if>
            <if test="cond.operator=='ne'">
              !=
            </if>
            <if test="cond.operator=='lt'">
              &lt;
            </if>
            <if test="cond.operator=='gt'">
              &gt;
            </if>
            <if test="cond.operator=='le'">
              &lt;=
            </if>
            <if test="cond.operator=='ge'">
              &gt;=
            </if>
            #{cond.value}
          </if>
        </foreach>

     </if>
    </where>
  </select>
  
  <!-- List<String> selectFields, List<CommonSearchCondition> condList, List<String> orderByList, PageBean pageBean -->
  <select id="searchDesignGrouping" resultMap="BaseResultMap" >
    select
      <choose>
        <when test="selectFields != null">
          <foreach item="field" index="index" collection="selectFields" separator=",">
            ${field}
          </foreach>
        </when>
        <otherwise>
          <include refid="Base_Column_List" />
        </otherwise>
      </choose>
    from bi_design_grouping
    <where>
      1=1 and  deleted = 0
     <if test="condList != null" >

        <foreach item="cond" index="index" collection="condList" >
          <if test="cond.operator=='like'">
            and  ${cond.columnName}
            like CONCAT(CONCAT("%",#{cond.value}),"%")
          </if>
          <if test="cond.operator =='in'">
            and   ${cond.columnName} in
            <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
          #{item}
      </foreach> 
          </if>
          <if test="cond.operator!='like' and cond.operator!='in'">
             ${cond.columnName}
            <if test="cond.operator=='eq'">
              =
            </if>
            <if test="cond.operator=='ne'">
              !=
            </if>
            <if test="cond.operator=='lt'">
              &lt;
            </if>
            <if test="cond.operator=='gt'">
              &gt;
            </if>
            <if test="cond.operator=='le'">
              &lt;=
            </if>
            <if test="cond.operator=='ge'">
              &gt;=
            </if>
            #{cond.value}
          </if>

        </foreach>

     </if>
    </where>
      <if test='orderByList != null'>
        order by
        <foreach item="order" index="index" collection="orderByList" separator=",">
          ${order}
        </foreach>
      </if>
      <if test='orderByList == null'>
        order by id
      </if>
      <if test="pageBean != null" >
        limit #{pageBean.startRecordNum}, #{pageBean.perPageSize}
      </if>
  </select>
  
  <!-- manual added -->
  <!-- 批量删除 -->
  <delete id="deleteByParams">
    delete a
    from bi_design_grouping a
    <if test="selectFields != null" >
      <where>
        <foreach item="cond" index="index" collection="selectFields" separator="and">
          <if test="cond.operator=='like'">
            ${cond.columnName}
            like concat('%',#{cond.value},'%')
          </if>
          <if test="cond.operator =='in'">
            ${cond.columnName} in
            <foreach item="item" index="index" collection="cond.value.split(',')"  open="(" separator="," close=")">
              #{item}
            </foreach>
          </if>
          <if test="cond.operator!='like' and cond.operator!='in'">
            ${cond.columnName}
            <if test="cond.operator=='eq'">
              =
            </if>
            <if test="cond.operator=='ne'">
              !=
            </if>
            <if test="cond.operator=='lt'">
              &lt;
            </if>
            <if test="cond.operator=='gt'">
              &gt;
            </if>
            <if test="cond.operator=='le'">
              &lt;=
            </if>
            <if test="cond.operator=='ge'">
              &gt;=
            </if>
            #{cond.value}
          </if>
        </foreach>
      </where>
    </if>
  </delete>

  <insert id="insertBatchDesignGroupingMapper" parameterType="java.util.List" >
    <selectKey keyProperty="id" resultType="Integer" order="AFTER" >
      select LAST_INSERT_ID()
    </selectKey>
    insert into bi_design_grouping (
    id,design_grouping,serial,original_serial,style,goods_level,category,create_time,create_by,modify_time,modify_by
    )values
    <foreach collection="list" item="standard" separator=",">
      (
      #{standard.id,jdbcType=INTEGER},#{standard.designGrouping,jdbcType=VARCHAR},#{standard.serial,jdbcType=VARCHAR},#{standard.originalSerial,jdbcType=VARCHAR},
      #{standard.style,jdbcType=VARCHAR},#{standard.goodsLevel,jdbcType=VARCHAR},#{standard.category,jdbcType=VARCHAR},
      #{standard.createTime,jdbcType=TIMESTAMP},#{standard.createBy,jdbcType=VARCHAR},#{standard.modifyTime,jdbcType=TIMESTAMP},
      #{standard.modifyBy,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>

  <!-- 批量更新 -->
  <update id="updateBatch">
    update bi_design_grouping
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="modify_by =case" suffix="end," >
        <foreach collection="list" item="i" index="index">
          <if test="i.modifyBy!=null">
            when id=#{i.id} then #{i.modifyBy}
          </if>
        </foreach>
      </trim>
      <trim prefix="modify_time =case" suffix="end," >
        <foreach collection="list" item="i" index="index">
          <!-- <if test="i.modifyTime!=null"> -->
          when id=#{i.id} then #{i.modifyTime}
          <!-- </if>       -->
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item.id}
    </foreach>
  </update>

  <delete id="deleteByIdList">
    delete from bi_design_grouping where id in
    <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <update id="delUpdateByIdList">
    update bi_design_grouping set deleted =1 where id in
    <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <select id="getDesignGroupings" resultType="com.ur.bi.model.DesignGrouping">
    select  id,design_grouping as designGrouping,serial,original_serial as originalSerial ,style,goods_level as goodsLevel,category,create_time as createTime,create_by as createBy,modify_time as modifyTime,modify_by as modifyBy,deleted from bi_design_grouping
  </select>
</mapper>